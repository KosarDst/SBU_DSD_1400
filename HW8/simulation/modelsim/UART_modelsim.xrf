vendor_name = ModelSim
source_file = 1, C:/Users/kosrd/Desktop/8thProject_DSD/UART.vhd
source_file = 1, c:/intelfpga_lite/17.1/quartus/libraries/vhdl/ieee/prmtvs_b.vhd
source_file = 1, c:/intelfpga_lite/17.1/quartus/libraries/vhdl/ieee/prmtvs_p.vhd
source_file = 1, c:/intelfpga_lite/17.1/quartus/libraries/vhdl/ieee/timing_b.vhd
source_file = 1, c:/intelfpga_lite/17.1/quartus/libraries/vhdl/ieee/timing_p.vhd
source_file = 1, C:/Users/kosrd/Desktop/8thProject_DSD/db/UART.cbx.xml
design_name = uart
instance = comp, \tx~output\, tx~output, uart, 1
instance = comp, \data_ready~output\, data_ready~output, uart, 1
instance = comp, \data_out[0]~output\, data_out[0]~output, uart, 1
instance = comp, \data_out[1]~output\, data_out[1]~output, uart, 1
instance = comp, \data_out[2]~output\, data_out[2]~output, uart, 1
instance = comp, \data_out[3]~output\, data_out[3]~output, uart, 1
instance = comp, \data_out[4]~output\, data_out[4]~output, uart, 1
instance = comp, \data_out[5]~output\, data_out[5]~output, uart, 1
instance = comp, \data_out[6]~output\, data_out[6]~output, uart, 1
instance = comp, \data_out[7]~output\, data_out[7]~output, uart, 1
instance = comp, \clk~input\, clk~input, uart, 1
instance = comp, \clk~inputCLKENA0\, clk~inputCLKENA0, uart, 1
instance = comp, \nrst~input\, nrst~input, uart, 1
instance = comp, \baud[7]~input\, baud[7]~input, uart, 1
instance = comp, \baud[6]~input\, baud[6]~input, uart, 1
instance = comp, \baud[5]~input\, baud[5]~input, uart, 1
instance = comp, \baud[4]~input\, baud[4]~input, uart, 1
instance = comp, \Equal1~1\, Equal1~1, uart, 1
instance = comp, \baud[3]~input\, baud[3]~input, uart, 1
instance = comp, \baud[2]~input\, baud[2]~input, uart, 1
instance = comp, \baud[1]~input\, baud[1]~input, uart, 1
instance = comp, \baud_counter~4\, baud_counter~4, uart, 1
instance = comp, \rx~input\, rx~input, uart, 1
instance = comp, \next_state~17\, next_state~17, uart, 1
instance = comp, \baud[0]~input\, baud[0]~input, uart, 1
instance = comp, \Equal1~2\, Equal1~2, uart, 1
instance = comp, \Equal1~3\, Equal1~3, uart, 1
instance = comp, \bit_counter~0\, bit_counter~0, uart, 1
instance = comp, \bit_counter[1]~1\, bit_counter[1]~1, uart, 1
instance = comp, \bit_counter[0]\, bit_counter[0], uart, 1
instance = comp, \bit_counter~3\, bit_counter~3, uart, 1
instance = comp, \bit_counter[1]\, bit_counter[1], uart, 1
instance = comp, \Add3~1\, Add3~1, uart, 1
instance = comp, \bit_counter~4\, bit_counter~4, uart, 1
instance = comp, \bit_counter[2]\, bit_counter[2], uart, 1
instance = comp, \Add3~0\, Add3~0, uart, 1
instance = comp, \bit_counter[3]~2\, bit_counter[3]~2, uart, 1
instance = comp, \bit_counter[3]\, bit_counter[3], uart, 1
instance = comp, \next_state~10\, next_state~10, uart, 1
instance = comp, \next_state.idle~0\, next_state.idle~0, uart, 1
instance = comp, \next_state.idle~1\, next_state.idle~1, uart, 1
instance = comp, \next_state.idle\, next_state.idle, uart, 1
instance = comp, \baud_counter[1]~0\, baud_counter[1]~0, uart, 1
instance = comp, \baud_counter[1]\, baud_counter[1], uart, 1
instance = comp, \LessThan4~0\, LessThan4~0, uart, 1
instance = comp, \LessThan4~1\, LessThan4~1, uart, 1
instance = comp, \next_state~14\, next_state~14, uart, 1
instance = comp, \baud_counter~1\, baud_counter~1, uart, 1
instance = comp, \baud_counter[0]\, baud_counter[0], uart, 1
instance = comp, \LessThan2~0\, LessThan2~0, uart, 1
instance = comp, \next_state~15\, next_state~15, uart, 1
instance = comp, \next_state~11\, next_state~11, uart, 1
instance = comp, \next_state~12\, next_state~12, uart, 1
instance = comp, \next_state~16\, next_state~16, uart, 1
instance = comp, \next_state.get_num\, next_state.get_num, uart, 1
instance = comp, \Add2~0\, Add2~0, uart, 1
instance = comp, \baud_counter~2\, baud_counter~2, uart, 1
instance = comp, \baud_counter[3]\, baud_counter[3], uart, 1
instance = comp, \LessThan2~1\, LessThan2~1, uart, 1
instance = comp, \process_0~0\, process_0~0, uart, 1
instance = comp, \Add2~1\, Add2~1, uart, 1
instance = comp, \baud_counter~3\, baud_counter~3, uart, 1
instance = comp, \baud_counter[2]\, baud_counter[2], uart, 1
instance = comp, \Equal1~0\, Equal1~0, uart, 1
instance = comp, \next_state~13\, next_state~13, uart, 1
instance = comp, \next_state~18\, next_state~18, uart, 1
instance = comp, \next_state.get_xor\, next_state.get_xor, uart, 1
instance = comp, \LessThan2~2\, LessThan2~2, uart, 1
instance = comp, \next_state.send_res~0\, next_state.send_res~0, uart, 1
instance = comp, \next_state.send_res~1\, next_state.send_res~1, uart, 1
instance = comp, \next_state.send_res\, next_state.send_res, uart, 1
instance = comp, \tx~0\, tx~0, uart, 1
instance = comp, \Add0~2\, Add0~2, uart, 1
instance = comp, \baud_counter_s~4\, baud_counter_s~4, uart, 1
instance = comp, \start~input\, start~input, uart, 1
instance = comp, \res_flag~0\, res_flag~0, uart, 1
instance = comp, \next_state_s~18\, next_state_s~18, uart, 1
instance = comp, \next_state_s.idle\, next_state_s.idle, uart, 1
instance = comp, \baud_counter_s[0]~1\, baud_counter_s[0]~1, uart, 1
instance = comp, \baud_counter_s[2]\, baud_counter_s[2], uart, 1
instance = comp, \Add0~1\, Add0~1, uart, 1
instance = comp, \baud_counter_s~3\, baud_counter_s~3, uart, 1
instance = comp, \baud_counter_s[3]\, baud_counter_s[3], uart, 1
instance = comp, \Equal0~0\, Equal0~0, uart, 1
instance = comp, \LessThan0~1\, LessThan0~1, uart, 1
instance = comp, \Equal0~2\, Equal0~2, uart, 1
instance = comp, \next_state_s~17\, next_state_s~17, uart, 1
instance = comp, \next_state_s.send_xor\, next_state_s.send_xor, uart, 1
instance = comp, \Selector4~0\, Selector4~0, uart, 1
instance = comp, \next_state_s.wait_state\, next_state_s.wait_state, uart, 1
instance = comp, \Selector5~0\, Selector5~0, uart, 1
instance = comp, \next_state_s.get_res\, next_state_s.get_res, uart, 1
instance = comp, \baud_counter_s~2\, baud_counter_s~2, uart, 1
instance = comp, \baud_counter_s[0]\, baud_counter_s[0], uart, 1
instance = comp, \Equal0~1\, Equal0~1, uart, 1
instance = comp, \bit_counter_s~4\, bit_counter_s~4, uart, 1
instance = comp, \bit_counter_s[2]~2\, bit_counter_s[2]~2, uart, 1
instance = comp, \bit_counter_s[0]\, bit_counter_s[0], uart, 1
instance = comp, \bit_counter_s~3\, bit_counter_s~3, uart, 1
instance = comp, \bit_counter_s[1]\, bit_counter_s[1], uart, 1
instance = comp, \Add1~1\, Add1~1, uart, 1
instance = comp, \bit_counter_s~1\, bit_counter_s~1, uart, 1
instance = comp, \bit_counter_s[2]\, bit_counter_s[2], uart, 1
instance = comp, \Add1~0\, Add1~0, uart, 1
instance = comp, \bit_counter_s[3]~0\, bit_counter_s[3]~0, uart, 1
instance = comp, \bit_counter_s[3]\, bit_counter_s[3], uart, 1
instance = comp, \Add0~0\, Add0~0, uart, 1
instance = comp, \baud_counter_s~0\, baud_counter_s~0, uart, 1
instance = comp, \baud_counter_s[1]\, baud_counter_s[1], uart, 1
instance = comp, \LessThan0~0\, LessThan0~0, uart, 1
instance = comp, \LessThan0~2\, LessThan0~2, uart, 1
instance = comp, \next_state_s~19\, next_state_s~19, uart, 1
instance = comp, \next_state_s~20\, next_state_s~20, uart, 1
instance = comp, \next_state_s~21\, next_state_s~21, uart, 1
instance = comp, \next_state_s.send_Zero\, next_state_s.send_Zero, uart, 1
instance = comp, \Selector2~0\, Selector2~0, uart, 1
instance = comp, \Selector2~1\, Selector2~1, uart, 1
instance = comp, \next_state_s.send_num\, next_state_s.send_num, uart, 1
instance = comp, \next_state_s~16\, next_state_s~16, uart, 1
instance = comp, \data_in[4]~input\, data_in[4]~input, uart, 1
instance = comp, \data_in[5]~input\, data_in[5]~input, uart, 1
instance = comp, \data_in[1]~input\, data_in[1]~input, uart, 1
instance = comp, \data_in[2]~input\, data_in[2]~input, uart, 1
instance = comp, \data_in[0]~input\, data_in[0]~input, uart, 1
instance = comp, \data_in[3]~input\, data_in[3]~input, uart, 1
instance = comp, \tx~3\, tx~3, uart, 1
instance = comp, \data_in[7]~input\, data_in[7]~input, uart, 1
instance = comp, \data_in[6]~input\, data_in[6]~input, uart, 1
instance = comp, \tx~4\, tx~4, uart, 1
instance = comp, \tx~5\, tx~5, uart, 1
instance = comp, \tx~2\, tx~2, uart, 1
instance = comp, \Mux0~4\, Mux0~4, uart, 1
instance = comp, \Mux0~0\, Mux0~0, uart, 1
instance = comp, \tx~1\, tx~1, uart, 1
instance = comp, \tx~6\, tx~6, uart, 1
instance = comp, \tx~reg0\, tx~reg0, uart, 1
instance = comp, \Decoder0~0\, Decoder0~0, uart, 1
instance = comp, \data_out~0\, data_out~0, uart, 1
instance = comp, \data_out[0]~reg0\, data_out[0]~reg0, uart, 1
instance = comp, \data_out~1\, data_out~1, uart, 1
instance = comp, \data_out[1]~reg0\, data_out[1]~reg0, uart, 1
instance = comp, \Decoder0~1\, Decoder0~1, uart, 1
instance = comp, \data_out~2\, data_out~2, uart, 1
instance = comp, \data_out[2]~reg0\, data_out[2]~reg0, uart, 1
instance = comp, \data_out~3\, data_out~3, uart, 1
instance = comp, \data_out[3]~reg0\, data_out[3]~reg0, uart, 1
instance = comp, \Decoder0~2\, Decoder0~2, uart, 1
instance = comp, \data_out~4\, data_out~4, uart, 1
instance = comp, \data_out[4]~reg0\, data_out[4]~reg0, uart, 1
instance = comp, \Decoder0~3\, Decoder0~3, uart, 1
instance = comp, \data_out~5\, data_out~5, uart, 1
instance = comp, \data_out[5]~reg0\, data_out[5]~reg0, uart, 1
instance = comp, \data_out~6\, data_out~6, uart, 1
instance = comp, \data_out[6]~reg0\, data_out[6]~reg0, uart, 1
instance = comp, \data_out~7\, data_out~7, uart, 1
instance = comp, \data_out[7]~reg0\, data_out[7]~reg0, uart, 1
instance = comp, \~QUARTUS_CREATED_GND~I\, ~QUARTUS_CREATED_GND~I, uart, 1
