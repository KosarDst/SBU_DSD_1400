|UART
nrst => state_s.OUTPUTSELECT
nrst => state_s.OUTPUTSELECT
nrst => state_s.OUTPUTSELECT
nrst => state_s.OUTPUTSELECT
nrst => state_s.OUTPUTSELECT
nrst => state_s.OUTPUTSELECT
nrst => next_state_s.OUTPUTSELECT
nrst => next_state_s.OUTPUTSELECT
nrst => next_state_s.OUTPUTSELECT
nrst => next_state_s.OUTPUTSELECT
nrst => next_state_s.OUTPUTSELECT
nrst => next_state_s.OUTPUTSELECT
nrst => baud_counter_s.OUTPUTSELECT
nrst => baud_counter_s.OUTPUTSELECT
nrst => baud_counter_s.OUTPUTSELECT
nrst => baud_counter_s.OUTPUTSELECT
nrst => bit_counter_s.OUTPUTSELECT
nrst => bit_counter_s.OUTPUTSELECT
nrst => bit_counter_s.OUTPUTSELECT
nrst => bit_counter_s.OUTPUTSELECT
nrst => res_flag.OUTPUTSELECT
nrst => next_state.OUTPUTSELECT
nrst => next_state.OUTPUTSELECT
nrst => next_state.OUTPUTSELECT
nrst => next_state.OUTPUTSELECT
nrst => baud_counter.OUTPUTSELECT
nrst => baud_counter.OUTPUTSELECT
nrst => baud_counter.OUTPUTSELECT
nrst => baud_counter.OUTPUTSELECT
nrst => bit_counter.OUTPUTSELECT
nrst => bit_counter.OUTPUTSELECT
nrst => bit_counter.OUTPUTSELECT
nrst => bit_counter.OUTPUTSELECT
nrst => tx.OUTPUTSELECT
nrst => data_ready.OUTPUTSELECT
nrst => data_out.OUTPUTSELECT
nrst => data_out.OUTPUTSELECT
nrst => data_out.OUTPUTSELECT
nrst => data_out.OUTPUTSELECT
nrst => data_out.OUTPUTSELECT
nrst => data_out.OUTPUTSELECT
nrst => data_out.OUTPUTSELECT
nrst => data_out.OUTPUTSELECT
clk => data_out[0]~reg0.CLK
clk => data_out[1]~reg0.CLK
clk => data_out[2]~reg0.CLK
clk => data_out[3]~reg0.CLK
clk => data_out[4]~reg0.CLK
clk => data_out[5]~reg0.CLK
clk => data_out[6]~reg0.CLK
clk => data_out[7]~reg0.CLK
clk => data_ready~reg0.CLK
clk => tx~reg0.CLK
clk => bit_counter[0].CLK
clk => bit_counter[1].CLK
clk => bit_counter[2].CLK
clk => bit_counter[3].CLK
clk => baud_counter[0].CLK
clk => baud_counter[1].CLK
clk => baud_counter[2].CLK
clk => baud_counter[3].CLK
clk => res_flag.CLK
clk => bit_counter_s[0].CLK
clk => bit_counter_s[1].CLK
clk => bit_counter_s[2].CLK
clk => bit_counter_s[3].CLK
clk => baud_counter_s[0].CLK
clk => baud_counter_s[1].CLK
clk => baud_counter_s[2].CLK
clk => baud_counter_s[3].CLK
clk => next_state~5.DATAIN
clk => state~1.DATAIN
clk => next_state_s~7.DATAIN
clk => state_s~1.DATAIN
start => next_state_s.OUTPUTSELECT
start => next_state_s.OUTPUTSELECT
start => next_state_s.OUTPUTSELECT
start => next_state_s.OUTPUTSELECT
start => next_state_s.OUTPUTSELECT
start => next_state_s.OUTPUTSELECT
rx => baud_counter.OUTPUTSELECT
rx => baud_counter.OUTPUTSELECT
rx => baud_counter.OUTPUTSELECT
rx => baud_counter.OUTPUTSELECT
rx => next_state.OUTPUTSELECT
rx => next_state.OUTPUTSELECT
rx => next_state.OUTPUTSELECT
rx => next_state.OUTPUTSELECT
rx => data_out.DATAB
rx => data_out.DATAB
rx => data_out.DATAB
rx => data_out.DATAB
rx => data_out.DATAB
rx => data_out.DATAB
rx => data_out.DATAB
rx => data_out.DATAB
rx => res_flag.OUTPUTSELECT
data_in[0] => Mux0.IN7
data_in[0] => tx.IN0
data_in[1] => Mux0.IN6
data_in[1] => tx.IN1
data_in[2] => Mux0.IN5
data_in[2] => tx.IN1
data_in[3] => Mux0.IN4
data_in[3] => tx.IN1
data_in[4] => Mux0.IN3
data_in[4] => tx.IN1
data_in[5] => Mux0.IN2
data_in[5] => tx.IN1
data_in[6] => Mux0.IN1
data_in[6] => tx.IN1
data_in[7] => Mux0.IN0
data_in[7] => tx.IN1
baud[0] => LessThan0.IN12
baud[0] => Equal0.IN11
baud[0] => LessThan2.IN12
baud[0] => Equal1.IN11
baud[0] => LessThan4.IN12
baud[1] => LessThan0.IN11
baud[1] => Equal0.IN10
baud[1] => LessThan2.IN11
baud[1] => Equal1.IN10
baud[1] => LessThan4.IN11
baud[2] => LessThan0.IN10
baud[2] => Equal0.IN9
baud[2] => LessThan2.IN10
baud[2] => Equal1.IN9
baud[2] => LessThan4.IN10
baud[3] => LessThan0.IN9
baud[3] => Equal0.IN8
baud[3] => LessThan2.IN9
baud[3] => Equal1.IN8
baud[3] => LessThan4.IN9
baud[4] => LessThan0.IN8
baud[4] => Equal0.IN7
baud[4] => LessThan2.IN8
baud[4] => Equal1.IN7
baud[4] => LessThan4.IN8
baud[5] => LessThan0.IN7
baud[5] => Equal0.IN6
baud[5] => LessThan2.IN7
baud[5] => Equal1.IN6
baud[5] => LessThan4.IN7
baud[6] => LessThan0.IN6
baud[6] => Equal0.IN5
baud[6] => LessThan2.IN6
baud[6] => Equal1.IN5
baud[6] => LessThan4.IN6
baud[7] => LessThan0.IN5
baud[7] => Equal0.IN4
baud[7] => LessThan2.IN5
baud[7] => Equal1.IN4
baud[7] => LessThan4.IN5
tx << tx~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_ready << data_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[0] << data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] << data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] << data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] << data_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[4] << data_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[5] << data_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[6] << data_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[7] << data_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


